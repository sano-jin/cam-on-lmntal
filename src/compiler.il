Compiled Ruleset @603 
Compiled Rule 
	--atommatch:
		spec           [2, 2]
	--memmatch:
		spec           [1, 1]
		jump           [L884, [0], [], []]
	--guard:L884:
		spec           [1, 1]
		jump           [L877, [0], [], []]
	--body:L877:
		spec           [1, 43]
		commit         ["_init", 0]
		newmem       [1, 0, 0]
		loadruleset    [1, @601]
		loadruleset    [0, @602]
		newatom      [2, 1, '$callback'_1]
		newatom      [3, 1, 'zerostep'_1]
		newatom      [4, 0, 'cam'_3]
		newatom      [5, 0, '()'_1]
		newatom      [6, 0, '[]'_1]
		newatom      [7, 0, '.'_3]
		newatom      [8, 0, 'cmpl'_3]
		newatom      [9, 0, '[]'_1]
		newatom      [10, 0, '[]'_1]
		newatom      [11, 0, 'if'_4]
		newatom      [12, 0, '<'_3]
		newatom      [13, 0, 5_1]
		newatom      [14, 0, 2_1]
		newatom      [15, 0, 3_1]
		newatom      [16, 0, 4_1]
		alloclink    [17, 2, 0]
		alloclink    [18, 3, 0]
		alloclink    [19, 4, 0]
		alloclink    [20, 4, 1]
		alloclink    [21, 4, 2]
		alloclink    [22, 5, 0]
		alloclink    [23, 6, 0]
		alloclink    [24, 7, 0]
		alloclink    [25, 7, 1]
		alloclink    [26, 7, 2]
		alloclink    [27, 8, 0]
		alloclink    [28, 8, 1]
		alloclink    [29, 8, 2]
		alloclink    [30, 9, 0]
		alloclink    [31, 10, 0]
		alloclink    [32, 11, 0]
		alloclink    [33, 11, 1]
		alloclink    [34, 11, 2]
		alloclink    [35, 11, 3]
		alloclink    [36, 12, 0]
		alloclink    [37, 12, 1]
		alloclink    [38, 12, 2]
		alloclink    [39, 13, 0]
		alloclink    [40, 14, 0]
		alloclink    [41, 15, 0]
		alloclink    [42, 16, 0]
		unifylinks     [17, 18, 1]
		unifylinks     [19, 22, 0]
		unifylinks     [20, 26, 0]
		unifylinks     [21, 23, 0]
		unifylinks     [24, 29, 0]
		unifylinks     [25, 31, 0]
		unifylinks     [27, 35, 0]
		unifylinks     [28, 30, 0]
		unifylinks     [32, 38, 0]
		unifylinks     [33, 41, 0]
		unifylinks     [34, 42, 0]
		unifylinks     [36, 39, 0]
		unifylinks     [37, 40, 0]
		callback       [1, 2]
		proceed        []


Compiled Ruleset @602             
Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 10]
		findatom     [1, 0, 'cmpl'_3]
		deref        [3, 1, 2, 0]
		func           [3, '.'_3]
		deref        [2, 1, 0, 2]
		func           [2, 'abs'_3]
		commit         ["abs", 0]
		removeatom     [1, 0, 'cmpl'_3]
		removeatom     [2, 0, 'abs'_3]
		removeatom     [3, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'cur'_2]
		newatom      [6, 0, '.'_3]
		newatom      [7, 0, 'cmpl'_3]
		newatom      [8, 0, '.'_3]
		newatom      [9, 0, '[]'_1]
		newlink        [4, 0, 5, 1, 0]
		relink         [4, 1, 3, 1, 0]
		relink         [4, 2, 3, 2, 0]
		newlink        [5, 0, 6, 2, 0]
		newlink        [6, 0, 7, 2, 0]
		newlink        [6, 1, 9, 0, 0]
		relink         [7, 0, 2, 1, 0]
		newlink        [7, 1, 8, 2, 0]
		relink         [8, 0, 2, 0, 0]
		relink         [8, 1, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 64]
		findatom     [1, 0, 'cmpl'_3]
		getlink      [4, 1, 1]
		deref        [3, 1, 2, 0]
		func           [3, '.'_3]
		getlink      [8, 3, 2]
		getlink      [7, 3, 1]
		deref        [2, 1, 0, 2]
		func           [2, ','_3]
		getlink      [6, 2, 1]
		getlink      [5, 2, 0]
		newlist      [9]
		addtolist      [9, 4]
		newlist      [10]
		addtolist      [10, 5]
		addtolist      [10, 6]
		addtolist      [10, 7]
		addtolist      [10, 8]
		isground     [11, 9, 10]
		commit         ["tuple", 0]
		newlist      [12]
		getlink      [13, 1, 1]
		addtolist      [12, 13]
		removeatom     [1, 0, 'cmpl'_3]
		removeatom     [2, 0, ','_3]
		removeatom     [3, 0, '.'_3]
		removeground   [12, 0]
		getlink      [14, 1, 1]
		insertconnectorsinnull[15, [14]]
		newlist      [16]
		getlink      [17, 1, 1]
		addtolist      [16, 17]
		copyground   [18, 16, 0]
		getfromlist  [19, 18, 0]
		getfromlist  [20, 18, 1]
		copyground   [21, 16, 0]
		getfromlist  [22, 21, 0]
		getfromlist  [23, 21, 1]
		newatom      [24, 0, '.'_3]
		newatom      [25, 0, 'push'_1]
		newatom      [26, 0, '.'_3]
		newatom      [27, 0, 'cmpl'_3]
		newatom      [28, 0, '.'_3]
		newatom      [29, 0, 'swap'_1]
		newatom      [30, 0, '.'_3]
		newatom      [31, 0, 'cmpl'_3]
		newatom      [32, 0, '.'_3]
		newatom      [33, 0, 'cons'_1]
		alloclink    [34, 32, 1]
		alloclink    [35, 33, 0]
		alloclink    [36, 32, 0]
		alloclink    [37, 31, 1]
		alloclink    [38, 31, 0]
		alloclink    [39, 32, 2]
		alloclink    [40, 30, 1]
		alloclink    [41, 31, 2]
		alloclink    [42, 30, 0]
		alloclink    [43, 30, 2]
		alloclink    [44, 28, 1]
		alloclink    [45, 29, 0]
		alloclink    [46, 28, 0]
		alloclink    [47, 27, 1]
		alloclink    [48, 27, 0]
		alloclink    [49, 28, 2]
		alloclink    [50, 26, 1]
		alloclink    [51, 27, 2]
		alloclink    [52, 26, 0]
		alloclink    [53, 24, 2]
		alloclink    [54, 26, 2]
		alloclink    [55, 24, 1]
		alloclink    [56, 25, 0]
		alloclink    [57, 24, 0]
		getfromlist  [58, 19, 0]
		getfromlist  [59, 22, 0]
		unifylinks     [57, 56, 0]
		unifylinks     [55, 54, 0]
		getlink      [60, 3, 2]
		unifylinks     [53, 60, 0]
		unifylinks     [52, 51, 0]
		unifylinks     [50, 49, 0]
		getlink      [61, 2, 0]
		unifylinks     [48, 61, 0]
		unifylinks     [47, 58, 0]
		unifylinks     [46, 45, 0]
		unifylinks     [44, 43, 0]
		unifylinks     [42, 41, 0]
		unifylinks     [40, 39, 0]
		getlink      [62, 2, 1]
		unifylinks     [38, 62, 0]
		unifylinks     [37, 59, 0]
		unifylinks     [36, 35, 0]
		getlink      [63, 3, 1]
		unifylinks     [34, 63, 0]
		deleteconnectors[15, 20]
		deleteconnectors[15, 23]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeground     [16]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 13]
		findatom     [1, 0, 'cmpl'_3]
		derefatom    [4, 1, 0]
		isstring       [4]
		isunary        [4]
		getfunc      [6, 4]
		deref        [3, 1, 2, 0]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		neqatom        [3, 2]
		derefatom    [5, 2, 0]
		isunary        [5]
		getfunc      [7, 5]
		neqfunc        [6, 7]
		func           [3, '.'_3]
		commit         ["lookup_var", 0]
		removeatom     [1, 0, 'cmpl'_3]
		removeatom     [3, 0, '.'_3]
		removeatom     [2, 0, '.'_3]
		removeatom     [5, 0]
		removeatom     [4, 0]
		copyatom     [8, 0, 4]
		newatom      [9, 0, '.'_3]
		newatom      [10, 0, 'fst'_1]
		newatom      [11, 0, '.'_3]
		newatom      [12, 0, 'cmpl'_3]
		newlink        [9, 0, 10, 0, 0]
		newlink        [9, 1, 11, 2, 0]
		relink         [9, 2, 3, 2, 0]
		newlink        [11, 0, 12, 2, 0]
		relink         [11, 1, 3, 1, 0]
		newlink        [12, 0, 8, 0, 0]
		relink         [12, 1, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeatom       [5]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 22]
		findatom     [1, 0, 'cmpl'_3]
		derefatom    [9, 1, 0]
		isstring       [9]
		isunary        [9]
		getlink      [4, 1, 0]
		deref        [3, 1, 2, 0]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		neqatom        [3, 2]
		derefatom    [10, 2, 0]
		isunary        [10]
		samefunc       [9, 10]
		getlink      [8, 2, 1]
		getlink      [7, 2, 0]
		func           [3, '.'_3]
		getlink      [6, 3, 2]
		getlink      [5, 3, 1]
		newlist      [11]
		addtolist      [11, 8]
		newlist      [12]
		addtolist      [12, 4]
		addtolist      [12, 5]
		addtolist      [12, 6]
		addtolist      [12, 7]
		isground     [13, 11, 12]
		commit         ["resolve_var", 0]
		newlist      [14]
		getlink      [15, 2, 1]
		addtolist      [14, 15]
		removeatom     [1, 0, 'cmpl'_3]
		removeatom     [3, 0, '.'_3]
		removeatom     [2, 0, '.'_3]
		removeatom     [10, 0]
		removeground   [14, 0]
		removeatom     [9, 0]
		getlink      [16, 2, 1]
		insertconnectorsinnull[17, [16]]
		newlist      [18]
		getlink      [19, 2, 1]
		addtolist      [18, 19]
		newatom      [20, 0, '.'_3]
		newatom      [21, 0, 'snd'_1]
		newlink        [20, 0, 21, 0, 0]
		relink         [20, 1, 3, 1, 0]
		relink         [20, 2, 3, 2, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeatom       [10]
		freeground     [18]
		freeatom       [9]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 9]
		findatom     [1, 0, 'cmpl'_3]
		deref        [3, 1, 2, 0]
		func           [3, '.'_3]
		deref        [2, 1, 0, 2]
		func           [2, 'app'_3]
		commit         ["app", 0]
		removeatom     [1, 0, 'cmpl'_3]
		removeatom     [2, 0, 'app'_3]
		removeatom     [3, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'cmpl'_3]
		newatom      [6, 0, ','_3]
		newatom      [7, 0, '.'_3]
		newatom      [8, 0, 'app'_1]
		newlink        [4, 0, 5, 2, 0]
		newlink        [4, 1, 7, 2, 0]
		relink         [4, 2, 3, 2, 0]
		newlink        [5, 0, 6, 2, 0]
		relink         [5, 1, 1, 1, 0]
		relink         [6, 0, 2, 0, 0]
		relink         [6, 1, 2, 1, 0]
		newlink        [7, 0, 8, 0, 0]
		relink         [7, 1, 3, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 20]
		findatom     [1, 0, 'cmpl'_3]
		derefatom    [7, 1, 0]
		isint          [7]
		getlink      [4, 1, 1]
		getlink      [3, 1, 0]
		deref        [2, 1, 2, 0]
		func           [2, '.'_3]
		getlink      [6, 2, 2]
		getlink      [5, 2, 1]
		newlist      [8]
		addtolist      [8, 4]
		newlist      [9]
		addtolist      [9, 3]
		addtolist      [9, 5]
		addtolist      [9, 6]
		isground     [10, 8, 9]
		commit         ["number", 0]
		newlist      [11]
		getlink      [12, 1, 1]
		addtolist      [11, 12]
		removeatom     [1, 0, 'cmpl'_3]
		removeatom     [2, 0, '.'_3]
		removeground   [11, 0]
		removeatom     [7, 0]
		getlink      [13, 1, 1]
		insertconnectorsinnull[14, [13]]
		newlist      [15]
		getlink      [16, 1, 1]
		addtolist      [15, 16]
		copyatom     [17, 0, 7]
		newatom      [18, 0, '.'_3]
		newatom      [19, 0, 'quote'_2]
		newlink        [18, 0, 19, 1, 0]
		relink         [18, 1, 2, 1, 0]
		relink         [18, 2, 2, 2, 0]
		newlink        [19, 0, 17, 0, 0]
		freeatom       [1]
		freeatom       [2]
		freeground     [15]
		freeatom       [7]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 11]
	--memmatch:
		spec           [1, 19]
		findatom     [1, 0, 'cmpl'_3]
		getlink      [4, 1, 1]
		deref        [3, 1, 2, 0]
		func           [3, '.'_3]
		getlink      [6, 3, 2]
		getlink      [5, 3, 1]
		deref        [2, 1, 0, 0]
		func           [2, 'true'_1]
		newlist      [7]
		addtolist      [7, 4]
		newlist      [8]
		addtolist      [8, 5]
		addtolist      [8, 6]
		isground     [9, 7, 8]
		commit         ["true", 0]
		newlist      [10]
		getlink      [11, 1, 1]
		addtolist      [10, 11]
		removeatom     [1, 0, 'cmpl'_3]
		removeatom     [2, 0, 'true'_1]
		removeatom     [3, 0, '.'_3]
		removeground   [10, 0]
		getlink      [12, 1, 1]
		insertconnectorsinnull[13, [12]]
		newlist      [14]
		getlink      [15, 1, 1]
		addtolist      [14, 15]
		newatom      [16, 0, '.'_3]
		newatom      [17, 0, 'quote'_2]
		newatom      [18, 0, 'true'_1]
		newlink        [16, 0, 17, 1, 0]
		relink         [16, 1, 3, 1, 0]
		relink         [16, 2, 3, 2, 0]
		newlink        [17, 0, 18, 0, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeground     [14]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 11]
	--memmatch:
		spec           [1, 19]
		findatom     [1, 0, 'cmpl'_3]
		getlink      [4, 1, 1]
		deref        [3, 1, 2, 0]
		func           [3, '.'_3]
		getlink      [6, 3, 2]
		getlink      [5, 3, 1]
		deref        [2, 1, 0, 0]
		func           [2, 'false'_1]
		newlist      [7]
		addtolist      [7, 4]
		newlist      [8]
		addtolist      [8, 5]
		addtolist      [8, 6]
		isground     [9, 7, 8]
		commit         ["false", 0]
		newlist      [10]
		getlink      [11, 1, 1]
		addtolist      [10, 11]
		removeatom     [1, 0, 'cmpl'_3]
		removeatom     [2, 0, 'false'_1]
		removeatom     [3, 0, '.'_3]
		removeground   [10, 0]
		getlink      [12, 1, 1]
		insertconnectorsinnull[13, [12]]
		newlist      [14]
		getlink      [15, 1, 1]
		addtolist      [14, 15]
		newatom      [16, 0, '.'_3]
		newatom      [17, 0, 'quote'_2]
		newatom      [18, 0, 'false'_1]
		newlink        [16, 0, 17, 1, 0]
		relink         [16, 1, 3, 1, 0]
		relink         [16, 2, 3, 2, 0]
		newlink        [17, 0, 18, 0, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeground     [14]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 11]
	--memmatch:
		spec           [1, 23]
		findatom     [1, 0, 'cmpl'_3]
		getlink      [4, 1, 1]
		deref        [3, 1, 2, 0]
		func           [3, '.'_3]
		getlink      [6, 3, 2]
		getlink      [5, 3, 1]
		deref        [2, 1, 0, 0]
		func           [2, 'plus'_1]
		newlist      [7]
		addtolist      [7, 4]
		newlist      [8]
		addtolist      [8, 5]
		addtolist      [8, 6]
		isground     [9, 7, 8]
		commit         ["plus", 0]
		newlist      [10]
		getlink      [11, 1, 1]
		addtolist      [10, 11]
		removeatom     [1, 0, 'cmpl'_3]
		removeatom     [2, 0, 'plus'_1]
		removeatom     [3, 0, '.'_3]
		removeground   [10, 0]
		getlink      [12, 1, 1]
		insertconnectorsinnull[13, [12]]
		newlist      [14]
		getlink      [15, 1, 1]
		addtolist      [14, 15]
		newatom      [16, 0, '.'_3]
		newatom      [17, 0, 'cur'_2]
		newatom      [18, 0, '.'_3]
		newatom      [19, 0, 'snd'_1]
		newatom      [20, 0, '.'_3]
		newatom      [21, 0, 'plus'_1]
		newatom      [22, 0, '[]'_1]
		newlink        [16, 0, 17, 1, 0]
		relink         [16, 1, 3, 1, 0]
		relink         [16, 2, 3, 2, 0]
		newlink        [17, 0, 18, 2, 0]
		newlink        [18, 0, 19, 0, 0]
		newlink        [18, 1, 20, 2, 0]
		newlink        [20, 0, 21, 0, 0]
		newlink        [20, 1, 22, 0, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeground     [14]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 11]
	--memmatch:
		spec           [1, 23]
		findatom     [1, 0, 'cmpl'_3]
		getlink      [4, 1, 1]
		deref        [3, 1, 2, 0]
		func           [3, '.'_3]
		getlink      [6, 3, 2]
		getlink      [5, 3, 1]
		deref        [2, 1, 0, 0]
		func           [2, 'mul'_1]
		newlist      [7]
		addtolist      [7, 4]
		newlist      [8]
		addtolist      [8, 5]
		addtolist      [8, 6]
		isground     [9, 7, 8]
		commit         ["mul", 0]
		newlist      [10]
		getlink      [11, 1, 1]
		addtolist      [10, 11]
		removeatom     [1, 0, 'cmpl'_3]
		removeatom     [2, 0, 'mul'_1]
		removeatom     [3, 0, '.'_3]
		removeground   [10, 0]
		getlink      [12, 1, 1]
		insertconnectorsinnull[13, [12]]
		newlist      [14]
		getlink      [15, 1, 1]
		addtolist      [14, 15]
		newatom      [16, 0, '.'_3]
		newatom      [17, 0, 'cur'_2]
		newatom      [18, 0, '.'_3]
		newatom      [19, 0, 'snd'_1]
		newatom      [20, 0, '.'_3]
		newatom      [21, 0, 'mul'_1]
		newatom      [22, 0, '[]'_1]
		newlink        [16, 0, 17, 1, 0]
		relink         [16, 1, 3, 1, 0]
		relink         [16, 2, 3, 2, 0]
		newlink        [17, 0, 18, 2, 0]
		newlink        [18, 0, 19, 0, 0]
		newlink        [18, 1, 20, 2, 0]
		newlink        [20, 0, 21, 0, 0]
		newlink        [20, 1, 22, 0, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeground     [14]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 11]
	--memmatch:
		spec           [1, 23]
		findatom     [1, 0, 'cmpl'_3]
		getlink      [4, 1, 1]
		deref        [3, 1, 2, 0]
		func           [3, '.'_3]
		getlink      [6, 3, 2]
		getlink      [5, 3, 1]
		deref        [2, 1, 0, 0]
		func           [2, 'sub'_1]
		newlist      [7]
		addtolist      [7, 4]
		newlist      [8]
		addtolist      [8, 5]
		addtolist      [8, 6]
		isground     [9, 7, 8]
		commit         ["sub", 0]
		newlist      [10]
		getlink      [11, 1, 1]
		addtolist      [10, 11]
		removeatom     [1, 0, 'cmpl'_3]
		removeatom     [2, 0, 'sub'_1]
		removeatom     [3, 0, '.'_3]
		removeground   [10, 0]
		getlink      [12, 1, 1]
		insertconnectorsinnull[13, [12]]
		newlist      [14]
		getlink      [15, 1, 1]
		addtolist      [14, 15]
		newatom      [16, 0, '.'_3]
		newatom      [17, 0, 'cur'_2]
		newatom      [18, 0, '.'_3]
		newatom      [19, 0, 'snd'_1]
		newatom      [20, 0, '.'_3]
		newatom      [21, 0, 'sub'_1]
		newatom      [22, 0, '[]'_1]
		newlink        [16, 0, 17, 1, 0]
		relink         [16, 1, 3, 1, 0]
		relink         [16, 2, 3, 2, 0]
		newlink        [17, 0, 18, 2, 0]
		newlink        [18, 0, 19, 0, 0]
		newlink        [18, 1, 20, 2, 0]
		newlink        [20, 0, 21, 0, 0]
		newlink        [20, 1, 22, 0, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeground     [14]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 11]
	--memmatch:
		spec           [1, 23]
		findatom     [1, 0, 'cmpl'_3]
		getlink      [4, 1, 1]
		deref        [3, 1, 2, 0]
		func           [3, '.'_3]
		getlink      [6, 3, 2]
		getlink      [5, 3, 1]
		deref        [2, 1, 0, 0]
		func           [2, 'lt'_1]
		newlist      [7]
		addtolist      [7, 4]
		newlist      [8]
		addtolist      [8, 5]
		addtolist      [8, 6]
		isground     [9, 7, 8]
		commit         ["lt", 0]
		newlist      [10]
		getlink      [11, 1, 1]
		addtolist      [10, 11]
		removeatom     [1, 0, 'cmpl'_3]
		removeatom     [2, 0, 'lt'_1]
		removeatom     [3, 0, '.'_3]
		removeground   [10, 0]
		getlink      [12, 1, 1]
		insertconnectorsinnull[13, [12]]
		newlist      [14]
		getlink      [15, 1, 1]
		addtolist      [14, 15]
		newatom      [16, 0, '.'_3]
		newatom      [17, 0, 'cur'_2]
		newatom      [18, 0, '.'_3]
		newatom      [19, 0, 'snd'_1]
		newatom      [20, 0, '.'_3]
		newatom      [21, 0, 'lt'_1]
		newatom      [22, 0, '[]'_1]
		newlink        [16, 0, 17, 1, 0]
		relink         [16, 1, 3, 1, 0]
		relink         [16, 2, 3, 2, 0]
		newlink        [17, 0, 18, 2, 0]
		newlink        [18, 0, 19, 0, 0]
		newlink        [18, 1, 20, 2, 0]
		newlink        [20, 0, 21, 0, 0]
		newlink        [20, 1, 22, 0, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeground     [14]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 11]
	--memmatch:
		spec           [1, 23]
		findatom     [1, 0, 'cmpl'_3]
		getlink      [4, 1, 1]
		deref        [3, 1, 2, 0]
		func           [3, '.'_3]
		getlink      [6, 3, 2]
		getlink      [5, 3, 1]
		deref        [2, 1, 0, 0]
		func           [2, 'if'_1]
		newlist      [7]
		addtolist      [7, 4]
		newlist      [8]
		addtolist      [8, 5]
		addtolist      [8, 6]
		isground     [9, 7, 8]
		commit         ["if", 0]
		newlist      [10]
		getlink      [11, 1, 1]
		addtolist      [10, 11]
		removeatom     [1, 0, 'cmpl'_3]
		removeatom     [2, 0, 'if'_1]
		removeatom     [3, 0, '.'_3]
		removeground   [10, 0]
		getlink      [12, 1, 1]
		insertconnectorsinnull[13, [12]]
		newlist      [14]
		getlink      [15, 1, 1]
		addtolist      [14, 15]
		newatom      [16, 0, '.'_3]
		newatom      [17, 0, 'cur'_2]
		newatom      [18, 0, '.'_3]
		newatom      [19, 0, 'snd'_1]
		newatom      [20, 0, '.'_3]
		newatom      [21, 0, 'if'_1]
		newatom      [22, 0, '[]'_1]
		newlink        [16, 0, 17, 1, 0]
		relink         [16, 1, 3, 1, 0]
		relink         [16, 2, 3, 2, 0]
		newlink        [17, 0, 18, 2, 0]
		newlink        [18, 0, 19, 0, 0]
		newlink        [18, 1, 20, 2, 0]
		newlink        [20, 0, 21, 0, 0]
		newlink        [20, 1, 22, 0, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeground     [14]
		proceed        []


Compiled Ruleset @601         
Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'fun'_3]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		commit         ["curry", 0]
		removeatom     [1, 0, 'fun'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [3, 0, 'abs'_3]
		newatom      [4, 0, 'fun'_3]
		relink         [3, 0, 2, 0, 0]
		newlink        [3, 1, 4, 2, 0]
		relink         [3, 2, 1, 2, 0]
		relink         [4, 0, 2, 1, 0]
		relink         [4, 1, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 3]
		findatom     [1, 0, 'fun'_3]
		deref        [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_Rfun", 0]
		removeatom     [1, 0, 'fun'_3]
		removeatom     [2, 0, '[]'_1]
		unify          [1, 2, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 6]
		findatom     [1, 0, 'let'_4]
		derefatom    [2, 1, 0]
		isstring       [2]
		commit         ["let", 0]
		removeatom     [1, 0, 'let'_4]
		removeatom     [2, 0]
		copyatom     [3, 0, 2]
		newatom      [4, 0, 'app'_3]
		newatom      [5, 0, 'abs'_3]
		newlink        [4, 0, 5, 2, 0]
		relink         [4, 1, 1, 1, 0]
		relink         [4, 2, 1, 3, 0]
		newlink        [5, 0, 3, 0, 0]
		relink         [5, 1, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 6]
		findatom     [1, 0, 'let'_4]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		commit         ["let_fun", 0]
		removeatom     [1, 0, 'let'_4]
		removeatom     [2, 0, '.'_3]
		newatom      [3, 0, 'app'_3]
		newatom      [4, 0, 'fun'_3]
		newatom      [5, 0, '.'_3]
		newlink        [3, 0, 4, 2, 0]
		relink         [3, 1, 1, 1, 0]
		relink         [3, 2, 1, 3, 0]
		newlink        [4, 0, 5, 2, 0]
		relink         [4, 1, 1, 2, 0]
		relink         [5, 0, 2, 0, 0]
		relink         [5, 1, 2, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 5]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, '+'_3]
		commit         ["plus", 0]
		removeatom     [1, 0, '+'_3]
		newatom      [2, 0, 'app'_3]
		newatom      [3, 0, 'plus'_1]
		newatom      [4, 0, ','_3]
		newlink        [2, 0, 3, 0, 0]
		newlink        [2, 1, 4, 2, 0]
		relink         [2, 2, 1, 2, 0]
		relink         [4, 0, 1, 0, 0]
		relink         [4, 1, 1, 1, 0]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 5]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, '*'_3]
		commit         ["mul", 0]
		removeatom     [1, 0, '*'_3]
		newatom      [2, 0, 'app'_3]
		newatom      [3, 0, 'mul'_1]
		newatom      [4, 0, ','_3]
		newlink        [2, 0, 3, 0, 0]
		newlink        [2, 1, 4, 2, 0]
		relink         [2, 2, 1, 2, 0]
		relink         [4, 0, 1, 0, 0]
		relink         [4, 1, 1, 1, 0]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 5]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, '-'_3]
		commit         ["sub", 0]
		removeatom     [1, 0, '-'_3]
		newatom      [2, 0, 'app'_3]
		newatom      [3, 0, 'sub'_1]
		newatom      [4, 0, ','_3]
		newlink        [2, 0, 3, 0, 0]
		newlink        [2, 1, 4, 2, 0]
		relink         [2, 2, 1, 2, 0]
		relink         [4, 0, 1, 0, 0]
		relink         [4, 1, 1, 1, 0]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 5]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, '<'_3]
		commit         ["lt", 0]
		removeatom     [1, 0, '<'_3]
		newatom      [2, 0, 'app'_3]
		newatom      [3, 0, 'lt'_1]
		newatom      [4, 0, ','_3]
		newlink        [2, 0, 3, 0, 0]
		newlink        [2, 1, 4, 2, 0]
		relink         [2, 2, 1, 2, 0]
		relink         [4, 0, 1, 0, 0]
		relink         [4, 1, 1, 1, 0]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 10]
		findatom     [1, 0, 'if'_4]
		commit         ["if", 0]
		removeatom     [1, 0, 'if'_4]
		newatom      [2, 0, 'app'_3]
		newatom      [3, 0, 'app'_3]
		newatom      [4, 0, 'if'_1]
		newatom      [5, 0, ','_3]
		newatom      [6, 0, 'abs'_3]
		newatom      [7, 0, "()"_1]
		newatom      [8, 0, 'abs'_3]
		newatom      [9, 0, "()"_1]
		newlink        [2, 0, 3, 2, 0]
		newlink        [2, 1, 5, 2, 0]
		relink         [2, 2, 1, 3, 0]
		newlink        [3, 0, 4, 0, 0]
		relink         [3, 1, 1, 0, 0]
		newlink        [5, 0, 6, 2, 0]
		newlink        [5, 1, 8, 2, 0]
		newlink        [6, 0, 7, 0, 0]
		relink         [6, 1, 1, 1, 0]
		newlink        [8, 0, 9, 0, 0]
		relink         [8, 1, 1, 2, 0]
		freeatom       [1]
		proceed        []


Inline
